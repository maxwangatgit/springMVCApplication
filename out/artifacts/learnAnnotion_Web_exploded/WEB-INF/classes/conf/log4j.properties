log4j.rootCategory=debug,console,file

## FATAL ,ERROR ,WARN ,INFO ,DEBUG

##########################
# This is to hide the VERY VERY verbose log messages that restlet is generating
##########################
log4j.logger.org.springframework=info
log4j.logger.org.springframework.jdbc.core.JdbcTemplate=INFO
#myBatis
log4j.logger.org.apache.ibatis=debug
log4j.logger.org.mybatis.spring=debug
#sql
log4j.logger.java.sql.Connection=debug
log4j.logger.java.sql.Statement=debug
log4j.logger.java.sql.PreparedStatement=debug
#com.iflytek
log4j.logger.com.iflytek=debug
log4j.logger.com.iflytek.vcw.dao=debug
log4j.logger.com.iflytek.vcw.service=debug
#es
log4j.logger.org.elasticsearch=INFO

#jest
log4j.logger.org.apache.http=INFO

log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%p %d{yyy-MM-dd HH:mm:ss} [%l] - %m%n
      
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.Append=true
log4j.appender.file.File=logs/demo.log
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%4d{yyyy-MM-dd HH:mm:ss.S} %p - %c - %m%n



#    %c 输出日志信息所属的类的全名 
#    %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy-MM-dd HH:mm:ss}，输出类似：2002-10-18- 22：10：28
#    %f 输出日志信息所属的类的类名 
#    %l 输出日志事件的发生位置，即输出日志信息的语句处于它所在的类的第几行 
#    %m 输出代码中指定的信息，如log(message)中的message 
#    %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n” 
#    %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL。如果是调用debug()输出的，则为DEBUG，依此类推 
#    %r 输出自应用启动到输出该日志信息所耗费的毫秒数 
#    %t 输出产生该日志事件的线程名